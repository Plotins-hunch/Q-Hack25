# Q-Hack25

Q-Hack25 is a prototype platform designed to automate the evaluation of startup pitch decks. It extracts key metrics from PDF presentations, enriches them with external data sources, and computes scores across various dimensions to assist in investment decision-making.

## üöÄ Features

- **Automated PDF Parsing**: Extracts structured information from startup pitch decks.
- **Data Enrichment**: Integrates data from APIs such as Crunchbase, LinkedIn, and PitchBook.
- **Metric Computation**: Calculates scores for:
  - **Team**: Founders' backgrounds, team composition, network strength.
  - **Market**: TAM, SAM, SOM, growth rates.
  - **Product**: Development stage, unique selling proposition, customer acquisition strategies.
  - **Traction**: Revenue growth (MRR, ARR), user engagement, customer validation (testimonials, churn, NPS).
  - **Funding**: Funding stage and amount, cap table strength, investors involved.
  - **Financial Efficiency**: Burn rate, CAC vs. LTV, unit economics.
  - **Miscellaneous**: Regulatory risks, geographic focus, timing/fad risks.
- **Scoring Framework**: Utilizes machine learning models (e.g., scikit-learn, XGBoost) and Bayesian methods for evaluation.
- **User Interface**: Frontend dashboard for visualizing scores and insights.
- **Automated Notifications**: Sends emails when specific data points are unavailable or require attention.

## üõ†Ô∏è Tech Stack

- **Backend**: Python, FastAPI
- **Frontend**: React.js
- **Data Processing**: pandas, numpy
- **API Calls**: requests, aiohttp
- **Web Scraping**: BeautifulSoup, Scrapy
- **Machine Learning**: scikit-learn, XGBoost

## üìÇ Repository Structure

- `q-hack-backend/`: Backend services and API endpoints.
- `qhack-frontend/`: Frontend React application.
- `email_module/`: Handles automated email notifications.
- `logs/`: Logging and monitoring data.
- `requirements.txt`: Python dependencies.
- `README`: Project overview and documentation.

## üìà Getting Started

1. **Clone the repository**:
   ```bash
   git clone https://github.com/Plotins-hunch/Q-Hack25.git
   cd Q-Hack25
   ```

2. **Set up the backend**:
   ```bash
   cd q-hack-backend
   pip install -r requirements.txt
   uvicorn main:app --reload
   ```

3. **Set up the frontend**:
   ```bash
   cd ../qhack-frontend
   npm install
   npm start
   ```

4. **Access the application**:
   - Frontend: `http://localhost:3000`
   - Backend API: `http://localhost:8000`

## üì¨ Contact

For questions or collaboration inquiries, please contact the repository maintainer through GitHub.

---

*Note: This project is a prototype developed for the Q-Hack25 hackathon and is intended for demonstration purposes only.*


